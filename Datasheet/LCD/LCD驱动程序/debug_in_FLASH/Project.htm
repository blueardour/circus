<!doctype html public "-//w3c//dtd html 4.0 transitional//en">                 <html><head>
<title>Static Call Graph - [.\debug_in_FLASH\Project.axf]</title>
</head>
<body><HR>
<H1>Static Call Graph for image .\debug_in_FLASH\Project.axf</H1><HR>
<BR><P><STRONG>Maximum Stack Usage =         64 bytes + Unknown
</STRONG><HR><P><STRONG><a name="[99033c]"></a>Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<P><STRONG><a name="[9902bc]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR>[Called By]<UL><LI><a href="#[a2d7ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL><P><STRONG><a name="[99048c]"></a>__main</STRONG> (ARM, 152 bytes, Stack size 0 bytes, __main.o(!!!))
<BR><BR>[Calls]<UL><LI><a href="#[a2f2f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_zero_region
<LI><a href="#[a2f44c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_move_region
<LI><a href="#[a2f3dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_move_loop
<LI><a href="#[a2f1c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[a2f36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_zero_loop
</UL><BR>[Called By]<UL><LI><a href="#[990fc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetInit
</UL><P><STRONG><a name="[99e604]"></a>IRQ_Exception</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e590]"></a>FIQ_Exception</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text))
<BR>[Called By]<UL><LI><a href="#[9910a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL><P><STRONG><a name="[99e520]"></a>TargetInit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e4ac]"></a>TargetResetInit</STRONG> (ARM, 204 bytes, Stack size 0 bytes, target.o(.text))
<BR>[Called By]<UL><LI><a href="#[990fc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetInit
</UL><P><STRONG><a name="[99e43c]"></a>__rt_div0</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e3d0]"></a>fputc</STRONG> (ARM, 20 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e364]"></a>fgetc</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e2f4]"></a>_sys_close</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e284]"></a>_sys_write</STRONG> (ARM, 28 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e214]"></a>_sys_read</STRONG> (ARM, 28 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e1a4]"></a>_ttywrch</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e134]"></a>_sys_istty</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e0c4]"></a>_sys_seek</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e054]"></a>_sys_ensure</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99dfe4]"></a>_sys_flen</STRONG> (ARM, 16 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99df74]"></a>_sys_tmpnam</STRONG> (ARM, 24 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99df04]"></a>_sys_exit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text))
<BR>[Called By]<UL><LI><a href="#[a2d8d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_abort1
</UL><P><STRONG><a name="[99de8c]"></a>_sys_command_string</STRONG> (ARM, 20 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[a3bebc]"></a>MSPI_Init</STRONG> (ARM, 80 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Called By]<UL><LI><a href="#[a338c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a3be48]"></a>MSPI_SendData</STRONG> (ARM, 44 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Called By]<UL><LI><a href="#[a3a0f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a3a084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><P><STRONG><a name="[a3a1dc]"></a>DelayNS</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lcd.o(.text))
<BR>[Called By]<UL><LI><a href="#[a3a014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39fa4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[a39f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
<LI><a href="#[a39ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a3a170]"></a>delayms</STRONG> (ARM, 60 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)
<P><STRONG><a name="[a3a0f8]"></a>LCD_WriteCommand</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3be48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
</UL><BR>[Called By]<UL><LI><a href="#[a3a014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39fa4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[a39f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
<LI><a href="#[a39ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a3a084]"></a>LCD_WriteData</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3be48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
</UL><BR>[Called By]<UL><LI><a href="#[a3a014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
</UL><P><STRONG><a name="[a3a014]"></a>LCD_SHOWStr</STRONG> (ARM, 88 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3a0f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a3a1dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DelayNS
<LI><a href="#[a3a084]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><BR>[Called By]<UL><LI><a href="#[a39ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a39fa4]"></a>LCD_Clear</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3a0f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a3a1dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DelayNS
</UL><P><STRONG><a name="[a39f30]"></a>LCD_RAMClear</STRONG> (ARM, 292 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3a0f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a3a1dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DelayNS
<LI><a href="#[a3a084]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><BR>[Called By]<UL><LI><a href="#[a39ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a39ec0]"></a>LCD_Init</STRONG> (ARM, 216 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39e50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[a3a0f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a3a1dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DelayNS
<LI><a href="#[a3a014]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;KeyRead
<LI><a href="#[a39f30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
</UL><BR>[Called By]<UL><LI><a href="#[a338c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a35cb8]"></a>KeyInit</STRONG> (ARM, 28 bytes, Stack size 0 bytes, key.o(.text))
<BR>[Called By]<UL><LI><a href="#[a338c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a39de4]"></a>KeyRead</STRONG> (ARM, 276 bytes, Stack size 0 bytes, key.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a338c4]"></a>main</STRONG> (ARM, 24 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a35cb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[a3bebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MSPI_Init
<LI><a href="#[a39ec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><BR>[Called By]<UL><LI><a href="#[a2f1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a2e9b0]"></a>_main_redirection</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _no_redirect.o(.text), UNUSED)
<P><STRONG><a name="[a33858]"></a>_main</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _no_redirect.o(.text), UNUSED)
<P><STRONG><a name="[a39e50]"></a>__rt_memcpy</STRONG> (ARM, 180 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2e314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_lastbytes
<LI><a href="#[a2e38c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_dest_aligned
<LI><a href="#[a2e2a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[a2e4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src2_loop
<LI><a href="#[a2e458]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src3_loop
<LI><a href="#[a2e548]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src1_loop
</UL><BR>[Called By]<UL><LI><a href="#[a39ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a2dc30]"></a>__32__use_no_semihosting_swi</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P><STRONG><a name="[a2dcb4]"></a>__semihosting_swi_guard</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P><STRONG><a name="[99e678]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P><STRONG><a name="[a2f1c4]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, kernel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2d7ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
<LI><a href="#[a2d864]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
<LI><a href="#[a338c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a2d780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Called By]<UL><LI><a href="#[99048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a2d624]"></a>__32__rt_exit</STRONG> (ARM, 0 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2d708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[a2d8d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_abort1
</UL><BR>[Called By]<UL><LI><a href="#[a2d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit
</UL><P><STRONG><a name="[a2d698]"></a>__rt_exit</STRONG> (ARM, 16 bytes, Stack size 8 bytes, kernel.o(.text), UNUSED)
<P><STRONG><a name="[a2d540]"></a>__32__rt_abort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<P><STRONG><a name="[a2d5b4]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<P><STRONG><a name="[a2e2a0]"></a>__rt_memcpy_w</STRONG> (ARM, 108 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2cff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_small
<LI><a href="#[a2d0b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_aligned_loop
</UL><BR>[Called By]<UL><LI><a href="#[a39e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a2e314]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a2d780]"></a>exit</STRONG> (ARM, 24 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4c9bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[a2d624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__rt_exit
</UL><BR>[Called By]<UL><LI><a href="#[a2f1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a2d864]"></a>__rt_lib_init</STRONG> (ARM, 228 bytes, Stack size 32 bytes, lib_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4c534]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_init
<LI><a href="#[a4c4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[a4c3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_get_argv (Weak Reference)
<LI><a href="#[a4c368]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[a4c2f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[a4c280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_rand_init (Weak Reference)
<LI><a href="#[a4c20c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[a4c198]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[a4c124]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (Weak Reference)
<LI><a href="#[a4c0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[a4c038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (Weak Reference)
<LI><a href="#[a4bfc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[a4bf50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[a4bedc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[a4be6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[a4bdf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[a4bd8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[a4bd14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_initialise (Weak Reference)
<LI><a href="#[a4bc9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_ctors() (Weak Reference)
<LI><a href="#[a4bc24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[a2f1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a2d708]"></a>__rt_lib_shutdown</STRONG> (ARM, 20 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4bbb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_finalise (Weak Reference)
<LI><a href="#[a4bb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[a4bac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[a2d624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__rt_exit
</UL><P><STRONG><a name="[a2d7ec]"></a>__rt_stackheap_init</STRONG> (ARM, 144 bytes, Stack size 16 bytes, stkheap1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4c198]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[9902bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[a4b024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_stack_slop (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[a2f1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a4afac]"></a>__rt_heap_extend</STRONG> (ARM, 108 bytes, Stack size 16 bytes, stkheap1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4c198]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[a4b114]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_heap_overflow
<LI><a href="#[a4b09c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL><P><STRONG><a name="[a4c198]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text))
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
<LI><a href="#[a2d7ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
<LI><a href="#[a4afac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend
<LI><a href="#[a49c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL><P><STRONG><a name="[a49c18]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 8 bytes, rt_fp_status_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4c198]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
</UL><BR>[Called By]<UL><LI><a href="#[a4c534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL><P><STRONG><a name="[a4c534]"></a>_fp_init</STRONG> (ARM, 20 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Calls]<UL><LI><a href="#[a49c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL><BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL><P><STRONG><a name="[a49b94]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P><STRONG><a name="[991274]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Undefined
</UL><BR>[Called By]<UL><LI><a href="#[991274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Undefined
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[9911fc]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[9911fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt
</UL><BR>[Called By]<UL><LI><a href="#[9911fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[991188]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrefetchAbort
</UL><BR>[Called By]<UL><LI><a href="#[991188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrefetchAbort
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[991118]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DataAbort
</UL><BR>[Called By]<UL><LI><a href="#[991118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DataAbort
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[9910a8]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[99e590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[991038]"></a>InitStack</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR>[Called By]<UL><LI><a href="#[990fc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetInit
</UL><P><STRONG><a name="[990fc8]"></a>ResetInit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitStack
<LI><a href="#[99e4ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TargetResetInit
<LI><a href="#[99048c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__main
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[a2f44c]"></a>_move_region</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[99048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a2f3dc]"></a>_move_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[99048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a2f2f8]"></a>_zero_region</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[99048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a2f36c]"></a>_zero_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[99048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a2e38c]"></a>_memcpy_dest_aligned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a2e548]"></a>_memcpy_src1_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a2e4d0]"></a>_memcpy_src2_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a2e458]"></a>_memcpy_src3_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a2d8d8]"></a>__rt_abort1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, kernel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99df04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL><BR>[Called By]<UL><LI><a href="#[a2d624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__rt_exit
</UL><P><STRONG><a name="[a2d0b4]"></a>_memcpy_aligned_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[a2e2a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[a2cff0]"></a>_memcpy_small</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[a2e2a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[a4b114]"></a>_heap_overflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stkheap1.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[a4afac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend
</UL><P><STRONG><a name="[a4c4c0]"></a>__Heap_DescSize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bc24]"></a>__alloca_initialize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bc9c]"></a>__call_ctors()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bbb0]"></a>__cpp_finalise</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL><P><STRONG><a name="[a4bd14]"></a>__cpp_initialise</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c3d8]"></a>__rt_get_argv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4b09c]"></a>__user_heap_extend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR>[Called By]<UL><LI><a href="#[a4afac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL><P><STRONG><a name="[a4b024]"></a>__user_stack_slop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d7ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init (Weak Reference)
</UL><P><STRONG><a name="[a4bf50]"></a>_atexit_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c9bc]"></a>_call_atexit_fns</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL><P><STRONG><a name="[a4be6c]"></a>_clock_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c20c]"></a>_get_lc_collate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c124]"></a>_get_lc_ctype</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c0ac]"></a>_get_lc_monetary</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c038]"></a>_get_lc_numeric</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bfc4]"></a>_get_lc_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bdf8]"></a>_getenv_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c368]"></a>_init_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c2f0]"></a>_init_user_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bd8c]"></a>_initio</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4c280]"></a>_rand_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bedc]"></a>_signal_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4bac0]"></a>_terminate_user_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL><P><STRONG><a name="[a4bb3c]"></a>_terminateio</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a2d708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL><HR></body></html>