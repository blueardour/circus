<!doctype html public "-//w3c//dtd html 4.0 transitional//en">                 <html><head>
<title>Static Call Graph - [.\debug_in_RAM\Project.axf]</title>
</head>
<body><HR>
<H1>Static Call Graph for image .\debug_in_RAM\Project.axf</H1><HR>
<BR><P><STRONG>Maximum Stack Usage =         96 bytes + Unknown
</STRONG><HR><P><STRONG><a name="[990478]"></a>Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<P><STRONG><a name="[9903f8]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR>[Called By]<UL><LI><a href="#[a499fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
</UL><P><STRONG><a name="[9905c8]"></a>__main</STRONG> (ARM, 152 bytes, Stack size 0 bytes, __main.o(!!!))
<BR><BR>[Calls]<UL><LI><a href="#[a4b508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_zero_region
<LI><a href="#[a4b65c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_move_region
<LI><a href="#[a4b5ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_move_loop
<LI><a href="#[a4b3d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[a4b57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_zero_loop
</UL><BR>[Called By]<UL><LI><a href="#[991104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetInit
</UL><P><STRONG><a name="[99e570]"></a>IRQ_Exception</STRONG> (ARM, 4 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99e570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL><BR>[Called By]<UL><LI><a href="#[99e570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL><P><STRONG><a name="[99e4fc]"></a>FIQ_Exception</STRONG> (ARM, 4 bytes, Stack size 0 bytes, target.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99e4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL><BR>[Called By]<UL><LI><a href="#[9911e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
<LI><a href="#[99e4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL><P><STRONG><a name="[99e48c]"></a>TargetInit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e418]"></a>TargetResetInit</STRONG> (ARM, 116 bytes, Stack size 4 bytes, target.o(.text))
<BR>[Called By]<UL><LI><a href="#[991104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetInit
</UL><P><STRONG><a name="[99e3a8]"></a>__rt_div0</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e33c]"></a>fputc</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e2d0]"></a>fgetc</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e260]"></a>_sys_close</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e1f0]"></a>_sys_write</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e180]"></a>_sys_read</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e110]"></a>_ttywrch</STRONG> (ARM, 4 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e0a0]"></a>_sys_istty</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99e030]"></a>_sys_seek</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99dfc0]"></a>_sys_ensure</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99df50]"></a>_sys_flen</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99dee0]"></a>_sys_tmpnam</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[99de70]"></a>_sys_exit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, target.o(.text))
<BR>[Called By]<UL><LI><a href="#[a49ae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_abort1
</UL><P><STRONG><a name="[99ddf8]"></a>_sys_command_string</STRONG> (ARM, 8 bytes, Stack size 0 bytes, target.o(.text), UNUSED)
<P><STRONG><a name="[a3bebc]"></a>MSPI_Init</STRONG> (ARM, 68 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Called By]<UL><LI><a href="#[a2f928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a3be48]"></a>MSPI_SendData</STRONG> (ARM, 28 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39ed4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><P><STRONG><a name="[a39ed4]"></a>LCD_WriteCommand</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3be48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
</UL><BR>[Called By]<UL><LI><a href="#[a39df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[a39c34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
<LI><a href="#[a39bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;point
<LI><a href="#[a39ae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_ToNormal
<LI><a href="#[a39a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_ToExtra
<LI><a href="#[a398bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a39e60]"></a>LCD_WriteData</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3be48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MSPI_SendData
</UL><BR>[Called By]<UL><LI><a href="#[a39df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39c34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
<LI><a href="#[a39bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;point
</UL><P><STRONG><a name="[a39df0]"></a>LCD_SHOWStr</STRONG> (ARM, 64 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[a39e60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a39d14]"></a>LCD_Clear</STRONG> (ARM, 24 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39ca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DelayNS
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
<LI><a href="#[a398bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a39c34]"></a>LCD_RAMClear</STRONG> (ARM, 472 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[a39e60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a39bc8]"></a>point</STRONG> (ARM, 236 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[a39e60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteData
</UL><BR>[Called By]<UL><LI><a href="#[a39b5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;line
</UL><P><STRONG><a name="[a39b5c]"></a>line</STRONG> (ARM, 352 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39bc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;point
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a39ae8]"></a>LCD_ToNormal</STRONG> (ARM, 32 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delayms
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a39a78]"></a>LCD_ToExtra</STRONG> (ARM, 32 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delayms
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a39a08]"></a>LCD_Test</STRONG> (ARM, 188 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[a39df0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a3992c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;KeyRead
<LI><a href="#[a39d14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[a39a78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_ToExtra
<LI><a href="#[a39c34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
<LI><a href="#[a39b5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;line
<LI><a href="#[a39ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_ToNormal
</UL><BR>[Called By]<UL><LI><a href="#[a2f928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a398bc]"></a>LCD_Init</STRONG> (ARM, 60 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a39ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_WriteCommand
<LI><a href="#[a39d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[a39d14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL><BR>[Called By]<UL><LI><a href="#[a2f928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a331f4]"></a>KeyInit</STRONG> (ARM, 24 bytes, Stack size 0 bytes, key.o(.text))
<BR>[Called By]<UL><LI><a href="#[a2f928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[a3992c]"></a>KeyRead</STRONG> (ARM, 196 bytes, Stack size 0 bytes, key.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a39ca8]"></a>DelayNS</STRONG> (ARM, 40 bytes, Stack size 0 bytes, delay.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL><P><STRONG><a name="[a39d84]"></a>delayms</STRONG> (ARM, 52 bytes, Stack size 0 bytes, delay.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_SHOWStr
<LI><a href="#[a39c34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_RAMClear
<LI><a href="#[a39bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;point
<LI><a href="#[a39ae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_ToNormal
<LI><a href="#[a39a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_ToExtra
<LI><a href="#[a398bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL><P><STRONG><a name="[a2f928]"></a>main</STRONG> (ARM, 24 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a331f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[a3bebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MSPI_Init
<LI><a href="#[a398bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[a39a08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><BR>[Called By]<UL><LI><a href="#[a4b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a4abc0]"></a>_main_redirection</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _no_redirect.o(.text), UNUSED)
<P><STRONG><a name="[a2f8bc]"></a>_main</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _no_redirect.o(.text), UNUSED)
<P><STRONG><a name="[a39998]"></a>__rt_memcpy</STRONG> (ARM, 180 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4a524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_lastbytes
<LI><a href="#[a4a59c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_dest_aligned
<LI><a href="#[a4a4b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[a4a6e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src2_loop
<LI><a href="#[a4a668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src3_loop
<LI><a href="#[a4a758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src1_loop
</UL><BR>[Called By]<UL><LI><a href="#[a39a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LCD_Test
</UL><P><STRONG><a name="[a49e40]"></a>__32__use_no_semihosting_swi</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P><STRONG><a name="[a49ec4]"></a>__semihosting_swi_guard</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P><STRONG><a name="[99e5e4]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P><STRONG><a name="[a4b3d4]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, kernel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a499fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
<LI><a href="#[a49a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
<LI><a href="#[a2f928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a49990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Called By]<UL><LI><a href="#[9905c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a49834]"></a>__32__rt_exit</STRONG> (ARM, 0 bytes, Stack size 8 bytes, kernel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a49918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[a49ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_abort1
</UL><BR>[Called By]<UL><LI><a href="#[a49990]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit
</UL><P><STRONG><a name="[a498a8]"></a>__rt_exit</STRONG> (ARM, 16 bytes, Stack size 8 bytes, kernel.o(.text), UNUSED)
<P><STRONG><a name="[a49750]"></a>__32__rt_abort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<P><STRONG><a name="[a497c4]"></a>__rt_abort</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kernel.o(.text), UNUSED)
<P><STRONG><a name="[a4a4b0]"></a>__rt_memcpy_w</STRONG> (ARM, 108 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a49200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_small
<LI><a href="#[a492c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_aligned_loop
</UL><BR>[Called By]<UL><LI><a href="#[a39998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a4a524]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a49990]"></a>exit</STRONG> (ARM, 24 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a48dc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[a49834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__rt_exit
</UL><BR>[Called By]<UL><LI><a href="#[a4b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a49a74]"></a>__rt_lib_init</STRONG> (ARM, 228 bytes, Stack size 32 bytes, lib_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a48938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_init
<LI><a href="#[a488c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__Heap_DescSize (Weak Reference)
<LI><a href="#[a487dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_get_argv (Weak Reference)
<LI><a href="#[a4876c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_init_alloc (Weak Reference)
<LI><a href="#[a486f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_init_user_alloc (Weak Reference)
<LI><a href="#[a48684]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_rand_init (Weak Reference)
<LI><a href="#[a48610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_collate (Weak Reference)
<LI><a href="#[a4859c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[a48528]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (Weak Reference)
<LI><a href="#[a484b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_monetary (Weak Reference)
<LI><a href="#[a4843c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (Weak Reference)
<LI><a href="#[a483c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_get_lc_time (Weak Reference)
<LI><a href="#[a48354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_atexit_init (Weak Reference)
<LI><a href="#[a482e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_signal_init (Weak Reference)
<LI><a href="#[a48270]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_clock_init (Weak Reference)
<LI><a href="#[a481fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_getenv_init (Weak Reference)
<LI><a href="#[a48190]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_initio (Weak Reference)
<LI><a href="#[a48118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_initialise (Weak Reference)
<LI><a href="#[a480a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_ctors() (Weak Reference)
<LI><a href="#[a48028]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__alloca_initialize (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[a4b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a49918]"></a>__rt_lib_shutdown</STRONG> (ARM, 20 bytes, Stack size 8 bytes, lib_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a47fb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_finalise (Weak Reference)
<LI><a href="#[a47f40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_terminateio (Weak Reference)
<LI><a href="#[a47ec4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_terminate_user_alloc (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[a49834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__rt_exit
</UL><P><STRONG><a name="[a499fc]"></a>__rt_stackheap_init</STRONG> (ARM, 144 bytes, Stack size 16 bytes, stkheap1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4859c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[9903f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[a47428]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_stack_slop (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[a4b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL><P><STRONG><a name="[a473b0]"></a>__rt_heap_extend</STRONG> (ARM, 108 bytes, Stack size 16 bytes, stkheap1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4859c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[a47518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_heap_overflow
<LI><a href="#[a474a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_heap_extend (Weak Reference)
</UL><P><STRONG><a name="[a4859c]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text))
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
<LI><a href="#[a499fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init
<LI><a href="#[a473b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend
<LI><a href="#[a4601c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL><P><STRONG><a name="[a4601c]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 8 bytes, rt_fp_status_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4859c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
</UL><BR>[Called By]<UL><LI><a href="#[a48938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL><P><STRONG><a name="[a48938]"></a>_fp_init</STRONG> (ARM, 20 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Calls]<UL><LI><a href="#[a4601c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL><BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL><P><STRONG><a name="[a45f98]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P><STRONG><a name="[9913b0]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[9913b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Undefined
</UL><BR>[Called By]<UL><LI><a href="#[9913b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Undefined
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[991338]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt
</UL><BR>[Called By]<UL><LI><a href="#[991338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[9912c4]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[9912c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrefetchAbort
</UL><BR>[Called By]<UL><LI><a href="#[9912c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrefetchAbort
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[991254]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DataAbort
</UL><BR>[Called By]<UL><LI><a href="#[991254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DataAbort
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[9911e4]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[99e4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[991174]"></a>InitStack</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR>[Called By]<UL><LI><a href="#[991104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetInit
</UL><P><STRONG><a name="[991104]"></a>ResetInit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, startup.o(vectors))
<BR><BR>[Calls]<UL><LI><a href="#[991174]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitStack
<LI><a href="#[99e418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TargetResetInit
<LI><a href="#[9905c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__main
</UL><BR>[Address Reference Count : 1]<UL><LI> startup.o(vectors)
</UL><P><STRONG><a name="[a4b65c]"></a>_move_region</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[9905c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a4b5ec]"></a>_move_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[9905c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a4b508]"></a>_zero_region</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[9905c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a4b57c]"></a>_zero_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __main.o(!!!))
<BR>[Called By]<UL><LI><a href="#[9905c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__main
</UL><P><STRONG><a name="[a4a59c]"></a>_memcpy_dest_aligned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a4a758]"></a>_memcpy_src1_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a4a6e0]"></a>_memcpy_src2_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a4a668]"></a>_memcpy_src3_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[a39998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[a49ae8]"></a>__rt_abort1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, kernel.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99de70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL><BR>[Called By]<UL><LI><a href="#[a49834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__rt_exit
</UL><P><STRONG><a name="[a492c4]"></a>_memcpy_aligned_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[a4a4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[a49200]"></a>_memcpy_small</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[a4a4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[a47518]"></a>_heap_overflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stkheap1.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[a473b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend
</UL><P><STRONG><a name="[a488c4]"></a>__Heap_DescSize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a48028]"></a>__alloca_initialize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a480a0]"></a>__call_ctors()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a47fb4]"></a>__cpp_finalise</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL><P><STRONG><a name="[a48118]"></a>__cpp_initialise</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a487dc]"></a>__rt_get_argv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a474a0]"></a>__user_heap_extend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR>[Called By]<UL><LI><a href="#[a473b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_heap_extend (Weak Reference)
</UL><P><STRONG><a name="[a47428]"></a>__user_stack_slop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a499fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_stackheap_init (Weak Reference)
</UL><P><STRONG><a name="[a48354]"></a>_atexit_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a48dc0]"></a>_call_atexit_fns</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49990]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit (Weak Reference)
</UL><P><STRONG><a name="[a48270]"></a>_clock_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a48610]"></a>_get_lc_collate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a48528]"></a>_get_lc_ctype</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a484b0]"></a>_get_lc_monetary</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4843c]"></a>_get_lc_numeric</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a483c8]"></a>_get_lc_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a481fc]"></a>_getenv_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a4876c]"></a>_init_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a486f4]"></a>_init_user_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a48190]"></a>_initio</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a48684]"></a>_rand_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a482e0]"></a>_signal_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (Weak Reference)
</UL><P><STRONG><a name="[a47ec4]"></a>_terminate_user_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL><P><STRONG><a name="[a47f40]"></a>_terminateio</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[a49918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (Weak Reference)
</UL><HR></body></html>